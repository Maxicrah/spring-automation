pipeline {
    agent any

    tools {
        maven "jenkins-maven"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    dir('C:\\Users\\maxim\\OneDrive\\Escritorio\\TpSpring\\TpFinal-Grupo-main') {
                        bat 'mvn clean install'
                    }
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    dir('C:\\Users\\maxim\\OneDrive\\Escritorio\\TpSpring\\TpFinal-Grupo-main') {
                        // Construir la imagen Docker
                        bat 'docker build -t maxicrah/springbootmysql:latest .'
                        // Etiquetar la imagen
                        bat 'docker tag maxicrah/springbootmysql:latest maxicrah/springbootmysql:latest'
                        // Iniciar sesión en Docker Hub (asegúrate de tener credenciales configuradas en Jenkins)
                        bat 'docker login -u maxicrah -p Militosello1'
                        // Empujar la imagen a Docker Hub
                        bat 'docker push maxicrah/springbootmysql:latest'
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Detener y eliminar el contenedor existente (si existe)
                    bat 'docker stop springbootmysqlproject || exit 0'
                    bat 'docker rm springbootmysqlproject || exit 0'
					// Crear la red si no existe
            		bat 'docker network ls | find "springboot-mysql-net" || docker network create springboot-mysql-net'
                    // Iniciar el contenedor con la nueva imagen desde DockerHub
                    bat 'docker run -d ---network=springboot-mysql-net  --name springbootmysqlproject -p 8080:8080 maxicrah/springbootmysql:latest'
                }
            }
        }
    }
}
